"0","##########################"
"0","##Functions to elements in return equation"
"0","##########################"
"0","###########"
"0","##Function to generate Beta, i,t"
"0","###########"
"0","gen_Beta <- function(){"
"0","  "
"0","  #Empty Matrix Init"
"0","  eln <- matrix(0, nrow = N, ncol = 3)"
"0","  Beta <- rep(list(eln), Time+1)"
"0","  "
"0","  for (t in 1:(Time+1)) {"
"0","    Beta[[t]] <- C[[t]][, 1:3]"
"0","  }"
"0","  return(Beta)"
"0","}"
"0","#Check"
"0","#gen_Beta()"
"0","###"
"0","##Function to generate v vector of errors"
"0","###"
"0","gen_v <- function(){"
"0","  "
"0","  #Empty Matrix Init"
"0","  elo <- matrix(0, nrow = 3, ncol = 1)"
"0","  "
"0","  v <- rep(list(elo), Time+1)"
"0","  "
"0","  for (t in 1:(Time+1)) {"
"0","    v[[t]] <- matrix("
"0","      data = rnorm(3, 0, 1),"
"0","      nrow = 3, ncol = 1"
"0","    )"
"0","  }"
"0","  return(v)"
"0","}"
"0","  "
"0","#############################"
"0","##Error Structure"
"0","#############################"
"0","##Specify omega, gamma and w"
"0","omega <- -0.736"
"0","gamma <- 0.90"
"0","w <- sqrt(0.363)"
"0","##"
"0","#############################"
"0","##Function to generate errors"
"0","#############################"
"0","gen_error <- function(){"
"0","  "
"0","  ##Generate Sigma first"
"0","  ##Sigma2 can be negative, check with David"
"0","  ##Needs to be fixed up, works anyway for now"
"0","  "
"0","  sigma2 <- rep(list(0), Time+1)"
"0","  "
"0","  sigma2[[1]] <- omega + w"
"0","  "
"0","  for (t in 1:Time+1) {"
"0","    sigma2[[t+1]] <- omega + gamma*sigma2[[t]] + w"
"0","  }"
"0","  "
"0","  sigma2[[1]] <- NULL"
"0","  "
"0","  ##Generate Errors"
"0","  "
"0","  error <- rep("
"0","    list("
"0","      matrix("
"0","        0, nrow = N, ncol = 1"
"0","      )"
"0","    ), Time+1"
"0","  )"
"0","  "
"0","  for (t in 1:Time+1){"
"0","    for (i in 1:N) {"
"0","      error[[t]][i] <- exp(sigma2[[t]])*rnorm(1, 0, 1)"
"0","    }"
"0","  }"
"0","  "
"0","  return(error)"
"0","}"
