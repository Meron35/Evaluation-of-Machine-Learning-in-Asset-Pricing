geom_point(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test) %>%
mutate(forecasts = ELN_stats_mse[[1]]$forecasts) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test) %>%
mutate(forecasts = ELN_stats_mse[[1]]$forecasts) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_2") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test) %>%
mutate(forecasts = ELN_stats_mse[[1]]$forecasts) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_3") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = NULL,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(0, 0),
include.mean = TRUE,
external.regressors = NULL),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = "all")
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test) %>%
mutate(forecasts = ELN_stats_mse[[1]]$forecasts) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_3") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test) %>%
mutate(forecasts = ELN_stats_mse[[1]]$forecasts) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_4") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test) %>%
mutate(forecasts = ELN_stats_mse[[1]]$forecasts) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_5") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test) %>%
mutate(forecasts = ELN_stats_mse[[1]]$forecasts) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_6") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
tsfeatures(stock_1$rt,
features = c("acf_features",
"arch_stat",
"crossing_points",
"entropy",
"flat_spots",
"heterogeneity_tsfeat_workaround",
"holt_parameters",
"hurst",
"lumpiness",
"nonlinearity",
"pacf_features",
"stl_features",
"stability",
"hw_parameters_tsfeat_workaround",
"unitroot_kpss",
"unitroot_pp"))
tsfeatures(stock_1$rt,
features = c("acf_features",
"arch_stat",
"crossing_points",
"entropy",
"flat_spots",
"holt_parameters",
"hurst",
"lumpiness",
"nonlinearity",
"pacf_features",
"stl_features",
"stability",
"hw_parameters_tsfeat_workaround",
"unitroot_kpss",
"unitroot_pp"))
tsfeatures(stock_1$rt,
features = c("acf_features",
"arch_stat",
"crossing_points",
"entropy",
"flat_spots",
"holt_parameters",
"hurst",
"lumpiness",
"nonlinearity",
"pacf_features",
"stl_features",
"stability",
"unitroot_kpss",
"unitroot_pp"))
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
as.data.frame(rolling_forecasts)$Mu
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = NULL,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(1, 1),
include.mean = TRUE,
external.regressors = NULL),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = "all")
plot(rolling_forecasts, which = "3")
as.data.frame(rolling_forecasts)$Mu
plot(rolling_forecasts, which = "3")
plot(rolling_forecasts, which = "3")
plot(rolling_forecasts, which = 3)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_6") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_6") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
mae(actual = stock_1_test$rt,
rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts))
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
mae(actual = stock_1_test$rt,
rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts))
mse(actual = stock_1_test$rt,
rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts))
mse(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
mse(actual = stock_1_test$rt,
rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts))
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = NULL,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(1, 1),
include.mean = TRUE,
external.regressors = stock_1_x),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = 3)
mse(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
stock_1_pca <- prcomp(stock_1[, -(1:3)], center = TRUE, scale. = TRUE, tol = 0.6)
summary(stock_1_pca)
summary(stock_1_pca)
stock_1_x <- predict(stock_1_pca, newdata = stock_1[, -(1:3)])
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = NULL,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(1, 1),
include.mean = TRUE,
external.regressors = stock_1_x),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = 3)
as.data.frame(rolling_forecasts)$Mu
mse(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
mae(actual = stock_1_test$rt,
rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts))
stock_1_pca <- prcomp(stock_1[, -(1:3)], center = TRUE, scale. = TRUE, tol = 0.8)
stock_1_pca <- prcomp(stock_1[, -(1:3)], center = TRUE, scale. = TRUE, tol = 0.8)
summary(stock_1_pca)
stock_1_x <- predict(stock_1_pca, newdata = stock_1[, -(1:3)])
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = NULL,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(1, 1),
include.mean = TRUE,
external.regressors = stock_1_x),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = 3)
as.data.frame(rolling_forecasts)$Mu
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
stock_1_pca <- prcomp(stock_1[, -(1:3)], center = TRUE, scale. = TRUE, tol = 0.7)
stock_1_pca
stock_1_pca
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = NULL,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(1, 1),
include.mean = TRUE,
external.regressors = stock_1_x),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = 3)
as.data.frame(rolling_forecasts)$Mu
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
stock_1_pca <- prcomp(stock_1[, -(1:3)], center = TRUE, scale. = TRUE, tol = 0.5)
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = stock_1_x,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(0, 0),
include.mean = TRUE,
external.regressors = NULL),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = 3)
as.data.frame(rolling_forecasts)$Mu
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = stock_1_x,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(0, 0),
include.mean = TRUE,
external.regressors = stock_1_x),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = 3)
as.data.frame(rolling_forecasts)$Mu
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
mae(actual = stock_1_test$rt,
rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts))
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
mae(actual = stock_1_test$rt,
0)
ugarch_spec <- ugarchspec(variance.model = list(model = "sGARCH",
garchOrder = c(1, 1),
submodel = NULL,
external.regressors = stock_1_x,
variance.targeting = FALSE),
mean.model     = list(armaOrder = c(0, 0),
include.mean = TRUE,
external.regressors = NULL),
distribution.model = "std")
rolling_forecasts <- ugarchroll(ugarch_spec, data = xts(stock_1$rt, order.by = as.Date(stock_1$time)),
n.ahead = 1, n.start = 144,
refit.every = 12, refit.window = "recursive")
plot(rolling_forecasts, which = 3)
as.data.frame(rolling_forecasts)$Mu
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
mae(actual = stock_1_test$rt,
rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts))
mae(actual = stock_1_test$rt,
as.data.frame(rolling_forecasts)$Mu)
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
filter(stock == "stock_1") %>%
mutate(forecasts = as.data.frame(rolling_forecasts)$Mu) %>%
select(time, stock, rt, forecasts) %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
mae(actual = stock_1_test$rt,
rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts))
pooled_panel %>%
filter(time %in% timeSlices[[1]]$test | time %in% timeSlices[[2]]$test | time %in% timeSlices[[3]]$test) %>%
mutate(forecasts = rbind(ELN_stats_mse[[1]]$forecasts, ELN_stats_mse[[2]]$forecasts, ELN_stats_mse[[3]]$forecasts)) %>%
select(time, stock, rt, forecasts) %>%
filter(stock == "stock_1") %>%
gather("type", "value", -stock, -time) %>%
ggplot() +
geom_line(aes(x = time, y = value, colour = type))
