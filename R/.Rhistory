theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vi.pdf",
width = 5 * a4_aspect_ratio, height = 5, units = "cm")
a4_aspect_ratio <- 1.4
# Variable Importance Plots
breaks <- levels(all_vi_df_averaged$variable)
## Bolding the true predictors for each specification
g1_labels <- as.expression(breaks)
g1_labels[[1]] <- bquote(bold(.(g1_labels[[1]])))
g1_labels[[2]] <- bquote(bold(.(g1_labels[[2]])))
g1_labels[[303]] <- bquote(bold(.(g1_labels[[303]])))
g2_labels <- as.expression(breaks)
g2_labels[[1]] <- bquote(bold(.(g2_labels[[1]])))
g2_labels[[2]] <- bquote(bold(.(g2_labels[[2]])))
g2_labels[[303]] <- bquote(bold(.(g2_labels[[303]])))
g3_labels <- as.expression(breaks)
g3_labels[[1]] <- bquote(bold(.(g3_labels[[1]])))
g3_labels[[2]] <- bquote(bold(.(g3_labels[[2]])))
g3_labels[[3]] <- bquote(bold(.(g3_labels[[3]])))
## Plots for PRESENTATION
## Average over all samples
all_vi_df_averaged_sam <- all_vi_df_averaged %>%
group_by(dgp_spec, model, variable, cross_corr) %>%
summarise(importance = mean(importance)) %>%
ungroup()
## Find the most important variables across all variables over all methods
important_variables_g1 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_variables_g2 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_variables_g3 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
top_model <- c("LM_MSE", "ELN_MAE", "RF_MAE", "NN5_MAE", "LSTM_MAE", "FFORMA_MSE")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g2) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g3) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size=rel(0.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size=rel(1))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(2))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(2))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(2.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(2.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
a4_aspect_ratio <- 1.4
# Variable Importance Plots
breaks <- levels(all_vi_df_averaged$variable)
## Bolding the true predictors for each specification
g1_labels <- as.expression(breaks)
g1_labels[[1]] <- bquote(bold(.(g1_labels[[1]])))
g1_labels[[2]] <- bquote(bold(.(g1_labels[[2]])))
g1_labels[[303]] <- bquote(bold(.(g1_labels[[303]])))
g2_labels <- as.expression(breaks)
g2_labels[[1]] <- bquote(bold(.(g2_labels[[1]])))
g2_labels[[2]] <- bquote(bold(.(g2_labels[[2]])))
g2_labels[[303]] <- bquote(bold(.(g2_labels[[303]])))
g3_labels <- as.expression(breaks)
g3_labels[[1]] <- bquote(bold(.(g3_labels[[1]])))
g3_labels[[2]] <- bquote(bold(.(g3_labels[[2]])))
g3_labels[[3]] <- bquote(bold(.(g3_labels[[3]])))
## Plots for PRESENTATION
## Average over all samples
all_vi_df_averaged_sam <- all_vi_df_averaged %>%
group_by(dgp_spec, model, variable, cross_corr) %>%
summarise(importance = mean(importance)) %>%
ungroup()
## Find the most important variables across all variables over all methods
important_variables_g1 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_variables_g2 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_variables_g3 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
top_model <- c("LM_MSE", "ELN_MAE", "RF_MAE", "NN5_MAE", "LSTM_MAE", "FFORMA_MSE")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g2) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g3) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
a4_aspect_ratio <- 1.4
# Variable Importance Plots
breaks <- levels(all_vi_df_averaged$variable)
## Bolding the true predictors for each specification
g1_labels <- as.expression(breaks)
g1_labels[[1]] <- bquote(bold(.(g1_labels[[1]])))
g1_labels[[2]] <- bquote(bold(.(g1_labels[[2]])))
g1_labels[[303]] <- bquote(bold(.(g1_labels[[303]])))
g2_labels <- as.expression(breaks)
g2_labels[[1]] <- bquote(bold(.(g2_labels[[1]])))
g2_labels[[2]] <- bquote(bold(.(g2_labels[[2]])))
g2_labels[[303]] <- bquote(bold(.(g2_labels[[303]])))
g3_labels <- as.expression(breaks)
g3_labels[[1]] <- bquote(bold(.(g3_labels[[1]])))
g3_labels[[2]] <- bquote(bold(.(g3_labels[[2]])))
g3_labels[[3]] <- bquote(bold(.(g3_labels[[3]])))
## Plots for PRESENTATION
## Average over all samples
all_vi_df_averaged_sam <- all_vi_df_averaged %>%
group_by(dgp_spec, model, variable, cross_corr) %>%
summarise(importance = mean(importance)) %>%
ungroup()
## Find the most important variables across all variables over all methods
important_variables_g1 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_variables_g2 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_variables_g3 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
top_model <- c("LM_MSE", "ELN_MAE", "RF_MAE", "NN5_MAE", "LSTM_MAE", "FFORMA_MSE")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g2) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g3) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
a4_aspect_ratio <- 1.3
# Variable Importance Plots
breaks <- levels(all_vi_df_averaged$variable)
## Bolding the true predictors for each specification
g1_labels <- as.expression(breaks)
g1_labels[[1]] <- bquote(bold(.(g1_labels[[1]])))
g1_labels[[2]] <- bquote(bold(.(g1_labels[[2]])))
g1_labels[[303]] <- bquote(bold(.(g1_labels[[303]])))
g2_labels <- as.expression(breaks)
g2_labels[[1]] <- bquote(bold(.(g2_labels[[1]])))
g2_labels[[2]] <- bquote(bold(.(g2_labels[[2]])))
g2_labels[[303]] <- bquote(bold(.(g2_labels[[303]])))
g3_labels <- as.expression(breaks)
g3_labels[[1]] <- bquote(bold(.(g3_labels[[1]])))
g3_labels[[2]] <- bquote(bold(.(g3_labels[[2]])))
g3_labels[[3]] <- bquote(bold(.(g3_labels[[3]])))
## Plots for PRESENTATION
## Average over all samples
all_vi_df_averaged_sam <- all_vi_df_averaged %>%
group_by(dgp_spec, model, variable, cross_corr) %>%
summarise(importance = mean(importance)) %>%
ungroup()
## Find the most important variables across all variables over all methods
important_variables_g1 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_variables_g2 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_variables_g3 <- all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
group_by(variable) %>%
summarise(importance = mean(importance)) %>%
arrange(desc(importance)) %>%
## Select the top 10
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
top_model <- c("LM_MSE", "ELN_MAE", "RF_MAE", "NN5_MAE", "LSTM_MAE", "FFORMA_MSE")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g2) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g3) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(text = element_text(size = rel(3.5))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vi.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
