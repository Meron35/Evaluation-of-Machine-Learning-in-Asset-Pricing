library(xtable)
#Parallel Computing
library(foreach)
library(doFuture)
#Registering
registerDoFuture()
plan(multisession)
set.seed(27935248)
## Load in results
LM_stats_mse <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/LM_stats_mse.rds")
LM_stats_mae <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/LM_stats_mae.rds")
ELN_stats_mse <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/ELN_stats_mse.rds")
ELN_stats_mae <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/ELN_stats_mae.rds")
RF_mse_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/RF_mse_stats_1.5_train_valid.rds")
RF_mae_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/RF_mae_stats_1.5_train_valid.rds")
################################################################
NNet_1_mse_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_1_mse_stats_1.5.rds")
NNet_1_mae_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_1_mae_stats_1.5.rds")
NNet_2_mse_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_2_mse_stats_1.5.rds")
NNet_2_mae_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_2_mae_stats_1.5.rds")
NNet_3_mse_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_3_mse_stats_1.5.rds")
NNet_3_mae_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_3_mae_stats_1.5.rds")
NNet_4_mse_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_4_mse_stats_1.5.rds")
NNet_4_mae_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_4_mae_stats_1.5.rds")
NNet_5_mse_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_5_mse_stats_1.5.rds")
NNet_5_mae_stats <- readRDS("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/R/Model_results/NNet_5_mae_stats_1.5.rds")
## Rbinding Loss Stats
empirical_results_df <- foreach(sample = (1:3), .combine = "rbind") %do% {
cbind(Sample = sample,
rbind(
cbind(model = "LM_MSE", LM_stats_mse[[sample]]$loss_stats),
cbind(model = "LM_MAE", LM_stats_mae[[sample]]$loss_stats),
cbind(model = "ELN_MSE", ELN_stats_mse[[sample]]$loss_stats),
cbind(model = "ELN_MAE", ELN_stats_mae[[sample]]$loss_stats),
cbind(model = "RF_MSE", RF_mse_stats[[sample]]$loss_stats),
cbind(model = "RF_MAE", RF_mae_stats[[sample]]$loss_stats),
cbind(model = "NN1_MSE", NNet_1_mse_stats[[sample]]$loss_stats),
cbind(model = "NN1_MAE", NNet_1_mae_stats[[sample]]$loss_stats),
cbind(model = "NN2_MSE", NNet_2_mse_stats[[sample]]$loss_stats),
cbind(model = "NN2_MAE", NNet_2_mae_stats[[sample]]$loss_stats),
cbind(model = "NN3_MSE", NNet_3_mse_stats[[sample]]$loss_stats),
cbind(model = "NN3_MAE", NNet_3_mae_stats[[sample]]$loss_stats),
cbind(model = "NN4_MSE", NNet_4_mse_stats[[sample]]$loss_stats),
cbind(model = "NN4_MAE", NNet_4_mae_stats[[sample]]$loss_stats),
cbind(model = "NN5_MSE", NNet_5_mse_stats[[sample]]$loss_stats),
cbind(model = "NN5_MAE", NNet_5_mae_stats[[sample]]$loss_stats)
)
)
}
write.csv(empirical_results_df, file = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_results.csv")
print(xtable(empirical_results_df, caption = "Empirical Data Results"),
file = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_results.tex",
tabular.environment = "longtable")
#####################################################################
## Plot These Results
a4_aspect_ratio <- 1.5
# Test Statistics
breaks <- levels(empirical_results_df$model)
labels <- as.expression(breaks)
labels[[4]] <- bquote(bold(.(labels[[4]])))
labels[[6]] <- bquote(bold(.(labels[[6]])))
## Test Statistics by Sample
# Test MAE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot() +
geom_bar(aes(x = model, y = test_MAE, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mae.pdf",
width = 15 * a4_aspect_ratio, height = 15, units = "cm")
# Test MSE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot() +
geom_bar(aes(x = model, y = test_MSE, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mse.pdf",
width = 15 * a4_aspect_ratio, height = 15, units = "cm")
# Test Rsquare
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot() +
geom_bar(aes(x = model, y = test_RSquare, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_rsquare.pdf",
width = 15 * a4_aspect_ratio, height = 15, units = "cm")
## Test Statistics averaged over all training samples
empirical_results_df %>%
group_by(model) %>%
mutate(test_MAE = mean(test_MAE)) %>%
ggplot() +
geom_bar(aes(x = model, y = test_MAE), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mae_ave_sample.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Test MSE
empirical_results_df %>%
group_by(model) %>%
mutate(test_MSE = mean(test_MSE)) %>%
ggplot() +
geom_bar(aes(x = model, y = test_MSE), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mse_ave_sample.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Test Rsquare
empirical_results_df %>%
group_by(model) %>%
mutate(test_RSquare = mean(test_RSquare)) %>%
ggplot() +
geom_bar(aes(x = model, y = test_RSquare), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_rsquare_ave_sample.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
####
# Training Statistics
# Train MAE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot() +
geom_bar(aes(x = model, y = train_MAE, fill = Sample), stat = "identity", position = position_dodge()) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_train_mae.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Train MSE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot() +
geom_bar(aes(x = model, y = train_MSE, fill = Sample), stat = "identity", position = position_dodge()) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_train_mse.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Train Rsquare
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot() +
geom_bar(aes(x = model, y = train_RSquare, fill = Sample), stat = "identity", position = position_dodge()) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_train_rsquare.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
################################################################################################################
## Presentation Plots
## Prove that quantile loss is better
breaks <- levels(all_loss_df_averaged$model)
labels <- as.expression(breaks)
labels[[2]] <- bquote(bold(.(labels[[2]])))
labels[[4]] <- bquote(bold(.(labels[[4]])))
labels[[6]] <- bquote(bold(.(labels[[6]])))
labels[[16]] <- bquote(bold(.(labels[[16]])))
# Test MAE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "LM_MAE" | model == "LM_MSE"
| model == "ELN_MAE" | model == "ELN_MSE"
| model == "RF_MAE" | model == "RF_MSE"
| model == "NN5_MAE" | model == "NN5_MSE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_MAE, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mae_pre_all.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Test Rsquare
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "LM_MAE" | model == "LM_MSE"
| model == "ELN_MAE" | model == "ELN_MSE"
| model == "RF_MAE" | model == "RF_MSE"
| model == "NN5_MAE" | model == "NN5_MSE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_RSquare, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_rsquare_pre_all.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Test MSE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "LM_MAE" | model == "LM_MSE"
| model == "ELN_MAE" | model == "ELN_MSE"
| model == "RF_MAE" | model == "RF_MSE"
| model == "NN5_MAE" | model == "NN5_MSE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_MSE, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mse_pre_all.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
## Actual Plots
breaks <- levels(empirical_results_df$model)
labels <- as.expression(breaks)
labels[[4]] <- bquote(bold(.(labels[[4]])))
labels[[6]] <- bquote(bold(.(labels[[6]])))
# Test MAE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "LM_MSE"
| model == "ELN_MAE"
| model == "RF_MAE"
| model == "NN5_MAE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_MAE, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mae_pre.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Test MSE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "LM_MSE"
| model == "ELN_MAE"
| model == "RF_MAE"
| model == "NN5_MAE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_MSE, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mse_pre.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Test Rsquare
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "LM_MSE"
| model == "ELN_MAE"
| model == "RF_MAE"
| model == "NN5_MAE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_RSquare, fill = Sample), stat = "identity", position = position_dodge()) +
scale_x_discrete(label = labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_rsquare_pre.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
## Focusing on neural networks only
# Test MAE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "NN1_MAE" | model == "NN1_MSE"
| model == "NN2_MAE" | model == "NN2_MSE"
| model == "NN3_MAE" | model == "NN3_MSE"
| model == "NN4_MAE" | model == "NN4_MSE"
| model == "NN5_MAE" | model == "NN5_MSE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_MAE, fill = Sample), stat = "identity", position = position_dodge()) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mae_pre_nn.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Test MSE
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "NN1_MAE" | model == "NN1_MSE"
| model == "NN2_MAE" | model == "NN2_MSE"
| model == "NN3_MAE" | model == "NN3_MSE"
| model == "NN4_MAE" | model == "NN4_MSE"
| model == "NN5_MAE" | model == "NN5_MSE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_MSE, fill = Sample), stat = "identity", position = position_dodge()) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_mse_pre_nn.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
# Test Rsquare
empirical_results_df %>%
mutate(Sample = as.factor(Sample)) %>%
filter(model == "NN1_MAE" | model == "NN1_MSE"
| model == "NN2_MAE" | model == "NN2_MSE"
| model == "NN3_MAE" | model == "NN3_MSE"
| model == "NN4_MAE" | model == "NN4_MSE"
| model == "NN5_MAE" | model == "NN5_MSE") %>%
ggplot() +
geom_bar(aes(x = model, y = test_RSquare, fill = Sample), stat = "identity", position = position_dodge()) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_brewer(palette = "Paired")
ggsave(filename = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_test_rsquare_pre_nn.pdf",
width = 7 * a4_aspect_ratio, height = 7, units = "cm")
## Function to filter out ind and macro dfs
filter_vi_df <- function(variable_importance_df, type ){
if(type == "ind") {
variable_importance_df %>%
filter(str_detect(variable, "ind_"))
} else {
variable_importance_df %>%
filter(str_detect(variable, "macro_"))
}
}
normalize_variable_importance <- function(variable_importance_df) {
variable_importance_df %>%
# Add a very very tiny value so that division by zero does not occur
mutate(importance = importance + 1e-100) %>%
mutate(importance = importance + abs(min(importance))) %>%
mutate(importance = importance/sum(importance))
}
empirical_tidy_vi_all <- foreach(sample = 1:3, .combine = "rbind") %do% {
rbind(
cbind(model = "LM_MSE", sample = sample, normalize_variable_importance(LM_stats_mse[[sample]]$variable_importance)),
cbind(model = "LM_MAE", sample = sample, normalize_variable_importance(LM_stats_mae[[sample]]$variable_importance)),
cbind(model = "ELN_MSE", sample = sample, normalize_variable_importance(ELN_stats_mse[[sample]]$variable_importance)),
cbind(model = "ELN_MAE", sample = sample, normalize_variable_importance(ELN_stats_mae[[sample]]$variable_importance)),
cbind(model = "RF_MSE", sample = sample, normalize_variable_importance(RF_mse_stats[[sample]]$variable_importance)),
cbind(model = "RF_MAE", sample = sample, normalize_variable_importance(RF_mae_stats[[sample]]$variable_importance)),
cbind(model = "NN1_MSE", sample = sample, normalize_variable_importance(NNet_1_mse_stats[[sample]]$variable_importance)),
cbind(model = "NN1_MAE", sample = sample, normalize_variable_importance(NNet_1_mae_stats[[sample]]$variable_importance)),
cbind(model = "NN2_MSE", sample = sample, normalize_variable_importance(NNet_2_mse_stats[[sample]]$variable_importance)),
cbind(model = "NN2_MAE", sample = sample, normalize_variable_importance(NNet_2_mae_stats[[sample]]$variable_importance)),
cbind(model = "NN3_MSE", sample = sample, normalize_variable_importance(NNet_3_mse_stats[[sample]]$variable_importance)),
cbind(model = "NN3_MAE", sample = sample, normalize_variable_importance(NNet_3_mae_stats[[sample]]$variable_importance)),
cbind(model = "NN4_MSE", sample = sample, normalize_variable_importance(NNet_4_mse_stats[[sample]]$variable_importance)),
cbind(model = "NN4_MAE", sample = sample, normalize_variable_importance(NNet_4_mae_stats[[sample]]$variable_importance)),
cbind(model = "NN5_MSE", sample = sample, normalize_variable_importance(NNet_5_mse_stats[[sample]]$variable_importance)),
cbind(model = "NN5_MAE", sample = sample, normalize_variable_importance(NNet_5_mae_stats[[sample]]$variable_importance))
)
}
empirical_tidy_vi_all <- empirical_tidy_vi_all %>%
arrange(as.character((variable))) %>%
mutate(variable = factor(as.character(variable), levels= unique(sort(as.character(variable)))))
write.csv(empirical_tidy_vi_all, file = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_tidy_vi.csv")
## By factor type
empirical_tidy_vi_ind <- foreach(sample = 1:3, .combine = "rbind") %do% {
rbind(
cbind(model = "LM_MSE", sample = sample,
LM_stats_mse[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "LM_MAE", sample = sample,
LM_stats_mae[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "ELN_MSE", sample = sample,
ELN_stats_mse[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "ELN_MAE", sample = sample,
ELN_stats_mae[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "RF_MSE", sample = sample,
RF_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "RF_MAE", sample = sample,
RF_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN1_MSE", sample = sample,
NNet_1_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN1_MAE", sample = sample,
NNet_1_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN2_MSE", sample = sample,
NNet_2_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN2_MAE", sample = sample,
NNet_2_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN3_MSE", sample = sample,
NNet_3_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN3_MAE", sample = sample,
NNet_3_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN4_MSE", sample = sample,
NNet_4_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN4_MAE", sample = sample,
NNet_4_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN5_MSE", sample = sample,
NNet_5_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance()),
cbind(model = "NN5_MAE", sample = sample,
NNet_5_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("ind") %>%
normalize_variable_importance())
)
}
empirical_tidy_vi_ind <- empirical_tidy_vi_ind %>%
arrange(as.character(variable)) %>%
mutate(variable = factor(as.character(variable), levels= unique(sort(as.character(variable)))))
write.csv(empirical_tidy_vi_ind, file = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_tidy_vi_ind.csv")
empirical_tidy_vi_macro <- foreach(sample = 1:3, .combine = "rbind") %do% {
rbind(
cbind(model = "LM_MSE", sample = sample,
LM_stats_mse[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "LM_MAE", sample = sample,
LM_stats_mae[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "ELN_MSE", sample = sample,
ELN_stats_mse[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "ELN_MAE", sample = sample,
ELN_stats_mae[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "RF_MSE", sample = sample,
RF_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "RF_MAE", sample = sample,
RF_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN1_MSE", sample = sample,
NNet_1_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN1_MAE", sample = sample,
NNet_1_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN2_MSE", sample = sample,
NNet_2_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN2_MAE", sample = sample,
NNet_2_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN3_MSE", sample = sample,
NNet_3_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN3_MAE", sample = sample,
NNet_3_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN4_MSE", sample = sample,
NNet_4_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN4_MAE", sample = sample,
NNet_4_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN5_MSE", sample = sample,
NNet_5_mse_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance()),
cbind(model = "NN5_MAE", sample = sample,
NNet_5_mae_stats[[sample]]$variable_importance %>%
filter_vi_df("macro") %>%
normalize_variable_importance())
)
}
empirical_tidy_vi_macro <- empirical_tidy_vi_macro %>%
arrange(as.character(variable)) %>%
mutate(variable = factor(as.character(variable), levels= unique(sort(as.character(variable)))))
write.csv(empirical_tidy_vi_macro, file = "~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/empirical_tidy_vi_macro.csv")
## Plot this
## A4 aspect ratio
a4_aspect_ratio <- 1.5
sample_1_vi_plot <- empirical_tidy_vi %>%
filter(sample == 1) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
group_by(sample, model) %>%
top_n(10, importance) %>%
ggplot() +
geom_tile(aes(x = model, y = variable, alpha = importance)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "none")
