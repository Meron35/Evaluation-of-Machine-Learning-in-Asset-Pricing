"0","############################"
"0","##Different g() functions"
"0","############################"
"0","#Logit function, used in some specified structures"
"0","logit <- function(x){"
"0","  (1 + exp(-x))^(-1)"
"0","}"
"0","#Remmeber that theta needs to be tuned later. Set up all of the functions as functions of theta"
"0","##############################"
"0","#g1"
"0","##############################"
"0","#Default theta, 1x3 dimensions"
"0","theta <- matrix(c(0.02, 0.02, 0.02), nrow = 1)"
"0","#g1 <- function(C, x, i, t, theta){"
"0","#  "
"0","#  matrix(c("
"0","#    C[[t]][i,1], C[[t]][i,2], C[[t]][i,3] * t(x[t, 3])"
"0","#    ), nrow = 1) %*% t(theta)"
"0","#}"
"0","# David: Need to change these functions if you are going to go with the array approach. "
"0","#g1 <- function(C, x, i, t, theta){"
"0","#  matrix(c("
"0","#    C[[t]][i,1], C[[t]][i,2], C[[t]][i,3] * t(x[t, 3])"
"0","#    ), nrow = 1) %*% t(theta)"
"0","#}"
"0","g1<- function(C,x,theta)"
"0","{"
"0","  Reg_fun<- matrix(0,N,(Time+1))"
"0","  for (i in 1:N)"
"0","  {  "
"0","#  Reg_fun[i,]<-cbind(C[,1:2,t],as.vector(C[,3,t]*as.numeric(x[t,1])))%*%t(theta)"
"0","  Reg_fun[i,]<-cbind(t(C[i,1:2,]),(as.matrix(C[i,3,]*as.matrix(x[,1]))))%*%t(theta)"
"0","  "
"0","}"
"0","#Reg_fun"
"0","return (Reg_fun)"
"0","}"
"0","  "
"0","  "
"0","#test if working"
"0","#t<-g1(C_bar, xt, 1, 1, theta)"
"0","##############################"
"0","#g2"
"0","##############################"
"0","#Default theta, 1x3 dimensions"
"0","theta <- matrix(c(0.04, 0.035, 0.01), nrow = 1)"
"0","g2 <- function(C, x, i, t, theta){"
"0","  matrix(c("
"0","    C[[t]][i, 1]^2, "
"0","    C[[t]][i, 1]*C[[t]][i, 2],"
"0","    sign("
"0","      C[[t]][i, 3] * t(x[t, 3])"
"0","      )"
"0","  ), nrow = 1) %*% t(theta)"
"0","}"
"0","#test if working"
"0","#g2(C, xt, 1, 1, theta)"
"0","#############################"
"0","#g3"
"0","#############################"
"0","#Default theta, 1x4 dimensions"
"0","theta <- matrix(c(0.04, 0.035, 0.01, 0.01), nrow = 1)"
"0","g3 <- function(C, x, i, t, theta){"
"0","  matrix("
"0","    c("
"0","      (C[[t]][i, 1] > 0), "
"0","      C[[t]][i, 2]^3,"
"0","      C[[t]][i, 1] * C[[t]][i, 2] * (C[[t]][i, 3] > 0),"
"0","      logit(C[[t]][i, 3])"
"0","      ),"
"0","    nrow = 1) %*% t(theta)"
"0","}"
"0","#test if working"
"0","#g3(C, xt, 1, 1, theta)"
"0","#################################"
"0","#g4"
"0","#Remember that we are supposed to pass C hat through to g4"
"0","#################################"
"0","#Default theta, 1x3 dimensions"
"0","theta <- matrix(c(0.02, 0.02, 0.02), nrow = 1)"
"0","g4 <- function(C, x, i, t, theta){"
"0","  matrix(c("
"0","    C[[t]][i, 1],"
"0","    C[[t]][i, 2],"
"0","    C[[t]][i, 3]*t(x[t, 3])"
"0","    ), nrow = 1"
"0","  ) %*% t(theta)"
"0","}"
"0","#test if working"
"0","#g4(C_hat, xt, 1, 1, theta)"
"0","#################################"
