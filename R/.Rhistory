theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vi.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g3) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vi.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
g1_A1_sv_0.01_results_all[[1]]$RF_MSE[[1]]$vimp
vimp_realisation <- function(results_list, realisation) {
vimp_tidy <- foreach(set = 1:3, .combine = "rbind") {
vimp_realisation <- function(results_list, realisation) {
vimp_tidy <- foreach(set = 1:3, .combine = "rbind") %do% {
bc <- rbind(cbind(set = set, model = "RF_MSE", type = "bc",
results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler),
cbind(set = set, model = "RF_MAE", type = "bc",
results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler)
)
ik <- rbind(cbind(set = set, model = "RF_MSE", type = "ik",
results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur),
cbind(set = set, model = "RF_MAE", type = "ik",
results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur)
)
rbind(bc, ik)
}
vimp_tidy
}
vimp_realisation(g1_A1_sv_0.01_results_all, 1)
g1_A1_sv_0.01_results_all[[1]]$RF_MSE[[1]]$vimp$ishwaran_kogalur %>% data.frame()
?data.frame()
g1_A1_sv_0.01_results_all[[1]]$RF_MSE[[1]]$vimp$ishwaran_kogalur %>% names()
g1_A1_sv_0.01_results_all[[1]]$RF_MSE[[1]]$vimp$ishwaran_kogalur %>%
data.frame(variables = names)
data.frame(variables = names(g1_A1_sv_0.01_results_all[[1]]$RF_MSE[[1]]$vimp$ishwaran_kogalur),
importance = g1_A1_sv_0.01_results_all[[1]]$RF_MSE[[1]]$vimp$ishwaran_kogalur)
vimp_realisation <- function(results_list, realisation) {
vimp_tidy <- foreach(set = 1:3, .combine = "rbind") %do% {
bc <- rbind(cbind(set = set, model = "RF_MSE", type = "bc",
data.frame(variables = names(results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler),
importance = results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler)),
cbind(set = set, model = "RF_MAE", type = "bc",
data.frame(variables = names(results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler),
importance = results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler))
)
ik <- rbind(cbind(set = set, model = "RF_MSE", type = "ik",
data.frame(variables = names(results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur),
importance = results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur)),
cbind(set = set, model = "RF_MAE", type = "ik",
data.frame(variables = names(results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur),
importance = results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur))
)
rbind(bc, ik)
}
vimp_tidy
}
vimp_realisation(g1_A1_sv_0.01_results_all, 1)
vimp_realisation <- function(results_list, realisation) {
vimp_tidy <- foreach(set = 1:3, .combine = "rbind") %do% {
bc <- rbind(cbind(set = set, model = "RF_MSE", type = "bc",
data.frame(variable = names(results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler),
importance = results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler)),
cbind(set = set, model = "RF_MAE", type = "bc",
data.frame(variable = names(results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler),
importance = results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler))
)
ik <- rbind(cbind(set = set, model = "RF_MSE", type = "ik",
data.frame(variable = names(results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur),
importance = results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur)),
cbind(set = set, model = "RF_MAE", type = "ik",
data.frame(variable = names(results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur),
importance = results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur))
)
rbind(bc, ik)
}
vimp_tidy
}
vimp_realisation(g1_A1_sv_0.01_results_all, 1)
?row.names
vimp_realisation <- function(results_list, realisation) {
vimp_tidy <- foreach(set = 1:3, .combine = "rbind") %do% {
bc <- rbind(cbind(set = set, model = "RF_MSE", type = "bc",
data.frame(variable = names(results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler),
importance = results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler)),
cbind(set = set, model = "RF_MAE", type = "bc",
data.frame(variable = names(results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler),
importance = results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler))
)
ik <- rbind(cbind(set = set, model = "RF_MSE", type = "ik",
data.frame(variable = names(results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur),
importance = results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur)),
cbind(set = set, model = "RF_MAE", type = "ik",
data.frame(variable = names(results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur),
importance = results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur))
)
rbind(bc, ik)
}
row.names(vimp_tidy) <- NULL
vimp_tidy
}
vimp_realisation(g1_A1_sv_0.01_results_all, 1)
vimp_iterate <- function(results_list) {
vimp_tidy <- foreach(i = 1:10, .combine = "rbind") {
vimp_iterate <- function(results_list) {
vimp_tidy <- foreach(i = 1:10, .combine = "rbind") %do% {
vimp_realisation(results_list, realisation = i)
}
}
test <- g1_A1_sv_0.01_results_all %>% vimp_iterate()
View(test)
View(all_loss_df)
vimp_realisation <- function(results_list, realisation) {
vimp_tidy <- foreach(set = 1:3, .combine = "rbind") %do% {
bc <- rbind(cbind(sample = set, model = "RF_MSE", type = "bc",
data.frame(variable = names(results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler),
importance = results_list[[realisation]]$RF_MSE[[set]]$vimp$breiman_cutler)),
cbind(sample = set, model = "RF_MAE", type = "bc",
data.frame(variable = names(results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler),
importance = results_list[[realisation]]$RF_MAE[[set]]$vimp$breiman_cutler))
)
ik <- rbind(cbind(sample = set, model = "RF_MSE", type = "ik",
data.frame(variable = names(results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur),
importance = results_list[[realisation]]$RF_MSE[[set]]$vimp$ishwaran_kogalur)),
cbind(sample = set, model = "RF_MAE", type = "ik",
data.frame(variable = names(results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur),
importance = results_list[[realisation]]$RF_MAE[[set]]$vimp$ishwaran_kogalur))
)
rbind(bc, ik)
}
row.names(vimp_tidy) <- NULL
vimp_tidy
}
vimp_iterate <- function(results_list) {
vimp_tidy <- foreach(i = 1:10, .combine = "rbind") %do% {
cbind(realization_no = i, vimp_realisation(results_list, realisation = i))
}
}
test <- g1_A1_sv_0.01_results_all %>% vimp_iterate()
View(test)
all_vimp_tidy_df <- rbind(
cbind(dgp_spec = "g1", cross_corr = 0.01, g1_A1_sv_0.01_results_all %>% vimp_iterate),
cbind(dgp_spec = "g2", cross_corr = 0.01, g2_A1_sv_0.01_results_all %>% vimp_iterate),
cbind(dgp_spec = "g3", cross_corr = 0.01, g3_A1_sv_0.01_results_all %>% vimp_iterate),
cbind(dgp_spec = "g1", cross_corr = 0.1, g1_A1_sv_0.1_results_all %>% vimp_iterate),
cbind(dgp_spec = "g2", cross_corr = 0.1, g2_A1_sv_0.1_results_all %>% vimp_iterate),
cbind(dgp_spec = "g3", cross_corr = 0.1, g3_A1_sv_0.1_results_all %>% vimp_iterate),
cbind(dgp_spec = "g1", cross_corr = 1, g1_A1_sv_1_results_all %>% vimp_iterate),
cbind(dgp_spec = "g2", cross_corr = 1, g2_A1_sv_1_results_all %>% vimp_iterate),
cbind(dgp_spec = "g3", cross_corr = 1, g3_A1_sv_1_results_all %>% vimp_iterate)
)
## Average everything over all samples
all_vimp_tidy_df_sam <- all_vimp_tidy_df %>%
group_by(dgp_spec, cross_corr, model, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup()
View(all_vimp_tidy_df)
View(all_vimp_tidy_df_sam)
important_vimps_g1 <- all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
group_by(dgp_spec, cross_corr, model, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup() %>%
arrange(desc(importance))
View(important_vimps_g1)
important_vimps_g1 <- all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
group_by(dgp_spec, cross_corr, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup() %>%
arrange(desc(importance))
important_vimps_g1 <- all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
group_by(dgp_spec, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup() %>%
arrange(desc(importance))
important_vimps_g1 <- all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
group_by(dgp_spec, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup() %>%
arrange(desc(importance)) %>%
head(10) %>%
dplyr::select(importance) %>%
pull() %>%
as.vector()
## Find the top variables for each specification
important_vimps_g1 <- all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
group_by(dgp_spec, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup() %>%
arrange(desc(importance)) %>%
head(10) %>%
dplyr::select(variables) %>%
pull() %>%
as.vector()
important_vimps_g1 <- all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
group_by(dgp_spec, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup() %>%
arrange(desc(importance)) %>%
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_vimps_g2 <- all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g2") %>%
group_by(dgp_spec, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup() %>%
arrange(desc(importance)) %>%
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
important_vimps_g3 <- all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g3") %>%
group_by(dgp_spec, variable) %>%
summarise(importance = mean(importance)) %>%
ungroup() %>%
arrange(desc(importance)) %>%
head(10) %>%
dplyr::select(variable) %>%
pull() %>%
as.vector()
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
filter(variable %in% important_vimps_g1) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g1") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g1) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vi.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g2") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g2) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vi.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vi_df_averaged_sam %>%
filter(dgp_spec == "g3") %>%
filter(model %in% top_model) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
filter(variable %in% important_variables_g3) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vi.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g2") %>%
filter(variable %in% important_vimps_g1) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vimp.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g3") %>%
filter(variable %in% important_vimps_g1) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vimp.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
filter(variable %in% important_vimps_g1) %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vimp.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "bc")
## Average everything over all samples and realizations
all_vimp_tidy_df_sam <- all_vimp_tidy_df %>%
group_by(dgp_spec, cross_corr, model, variable, type) %>%
summarise(importance = mean(importance)) %>%
ungroup()
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "bc") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vimp_bc.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "ik") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vimp_ik.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g2") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "ik") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vimp_ik.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g3") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "ik") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vimp_ik.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "bc") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vimp_bc.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g2") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "bc") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vimp_bc.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g3") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "bc") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vimp_bc.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
#########
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g1") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "ik") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g1_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g1_vimp_ik.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g2") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "ik") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g2_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g2_vimp_ik.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
all_vimp_tidy_df_sam %>%
filter(dgp_spec == "g3") %>%
filter(variable %in% important_vimps_g1) %>%
filter(type == "ik") %>%
mutate(variable = fct_reorder(variable, importance)) %>%
ggplot() +
geom_tile(aes(x = variable, y = model, fill = importance)) +
scale_x_discrete(label = g3_labels, breaks = breaks) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position = "right") +
scale_fill_distiller(palette = "Spectral") +
facet_grid(rows = vars(cross_corr))
ggsave("~/GitHub/Evaluation-of-Machine-Learning-in-Asset-Pricing/Results/simulation/graphics/simulation_g3_vimp_ik.pdf",
width = 8 * a4_aspect_ratio, height = 8, units = "cm")
