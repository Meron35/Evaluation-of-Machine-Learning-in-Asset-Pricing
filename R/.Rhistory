# Output Layer
layer_dense(units = 1, activation = "linear")
} else if (hidden_layers == 3) {
model <- keras_model_sequential() %>%
# Layer 1
layer_dense(units = 32, input_shape = ncol(train_x)) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
# Layer 2
layer_dense(units = 16) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
#Layer 3
layer_dense(units = 8) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
# Output Layer
layer_dense(units = 1, activation = "linear")
} else if (hidden_layers == 4) {
model <- keras_model_sequential() %>%
# Layer 1
layer_dense(units = 32, input_shape = ncol(train_x)) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
# Layer 2
layer_dense(units = 16) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
#Layer 3
layer_dense(units = 8) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
#Layer 4
layer_dense(units = 4) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
# Output Layer
layer_dense(units = 1, activation = "linear")
} else {
model <- keras_model_sequential() %>%
# Layer 1
layer_dense(units = 32, input_shape = ncol(train_x)) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
# Layer 2
layer_dense(units = 16) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
#Layer 3
layer_dense(units = 8) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
#Layer 4
layer_dense(units = 4) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
#Layer 5
layer_dense(units = 2) %>%
layer_activation("relu") %>%
layer_activity_regularization(l1 = 0.01) %>%
layer_batch_normalization() %>%
# Output Layer
layer_dense(units = 1, activation = "linear")
}
model %>% compile(
loss = loss_function,
optimizer = "adam",
metrics = list("mae", "mse")
)
model
}
neural_network <- build_NN(hidden_layers, loss_function)
# Other options used throughout the neural network fitting process are specified here
# Namely, batch size
# In general, larger batch sizes result in faster progress in training, but don't always converge as fast. Smaller batch sizes train slower, but can converge faster.
# Default batch size is 32
neural_network %>% fit(as.matrix(train_x), as.matrix(train_y),
batch_size = batch_size, epochs = 500, verbose = 1,
validation_data = list(as.matrix(validation_x), as.matrix(validation_y)),
callbacks = list(early_stop))
#Model
NNet_stats[[set]]$model <- neural_network
#Train
train_predict <- neural_network %>% predict(as.matrix(train_x))
NNet_stats[[set]]$loss_stats$train_MAE <- mae(train$rt, train_predict)
NNet_stats[[set]]$loss_stats$train_MSE <- mse(train$rt, train_predict)
NNet_stats[[set]]$loss_stats$train_RMSE <- rmse(train$rt, train_predict)
NNet_stats[[set]]$loss_stats$train_RSquare <- R2(train_predict, train$rt, form = "traditional")
#Validation
validation_predict <- neural_network %>% predict(as.matrix(validation_x))
NNet_stats[[set]]$loss_stats$validation_MAE <- mae(validation$rt, validation_predict)
NNet_stats[[set]]$loss_stats$validation_MSE <- mse(validation$rt, validation_predict)
NNet_stats[[set]]$loss_stats$validation_RMSE <- rmse(validation$rt, validation_predict)
NNet_stats[[set]]$loss_stats$validation_RSquare <- R2(validation_predict, validation$rt, form = "traditional")
#Test
test_predict <- neural_network %>% predict(as.matrix(test_x))
NNet_stats[[set]]$loss_stats$test_MAE <- mae(test$rt, test_predict)
NNet_stats[[set]]$loss_stats$test_MSE <- mse(test$rt, test_predict)
NNet_stats[[set]]$loss_stats$test_RMSE <- rmse(test$rt, test_predict)
NNet_stats[[set]]$loss_stats$test_RSquare <- R2(test_predict, test$rt, form = "traditional")
#Forecasts
NNet_stats[[set]]$forecasts <- test_predict
#Forecast residuals
NNet_stats[[set]]$forecast_resids <- test$rt - test_predict
#Variable Importance
NNet_stats[[set]]$variable_importance <- NNet_variable_importance(test, timeSlices, neural_network)
}
NNet_stats
}
NNet_variable_importance <- function(test, timeSlices, nnet_model) {
test_x <- as.matrix(test[4:ncol(test)])
test_x_zero <- test_x
test_x_zero[, 1] <- 0
test_x <- as.matrix(test_x)
text_x_zero <- as.matrix(test_x_zero)
original_R2 <- R2(predict(nnet_model, as.matrix(test_x)), test$rt, form = "traditional")
new_R2 <- R2(predict(nnet_model, as.matrix(test_x_zero)), test$rt, form = "traditional")
variable_importance <- data.frame(variable = colnames(test_x)[1], importance = (original_R2 - new_R2))
for (i in 2:ncol(test_x)) {
test_x_zero <- test_x
test_x_zero[, i] <- 0
original_R2 <- R2(predict(nnet_model, as.matrix(test_x)), test$rt, form = "traditional")
new_R2 <- R2(predict(nnet_model, as.matrix(test_x_zero)), test$rt, form = "traditional")
variable_importance <- rbind(variable_importance,
data.frame(variable = colnames(test_x)[i],
importance = (original_R2 - new_R2)
)
)
}
return(variable_importance)
}
NNet_1_mse_stats <- NNet_fit_stats(pooled_panel, timeSlices, 1, "mse", batch_size = 32, 20)
NNet_1_mse_stats[[1]]$variable_importance %>% arrange(desc(importance))
NNet_1_mse_stats[[1]]$loss_stats
NNet_1_mse_stats[[2]]$loss_stats
NNet_1_mse_stats[[3]]$loss_stats
NNet_1_mse_stats[[2]]$variable_importance %>% arrange(desc(importance))
NNet_1_mse_stats <- NNet_fit_stats(pooled_panel, timeSlices, 1, "mse", batch_size = 32, 10)
NNet_1_mse_stats[[1]]$variable_importance %>% arrange(desc(importance))
NNet_1_mse_stats[[1]]$loss_stats
LM_stats_mse[[1]]$loss_stats
?read_csv
knitr::opts_chunk$set(echo = TRUE)
################
##Load Libraries
################
library(tidyverse)
library(keras)
library(ggplot2)
library(forecast)
library(rlist)
library(plm)
library(Metrics)
library(ranger)
library(caret)
library(readr)
library(zoo)
#Parallel Computing
library(foreach)
library(doFuture)
#Registering
registerDoFuture()
plan(multisession)
set.seed(27935248)
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1127)
View(X17_Industry_Portfolios)
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115)
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115,
colnames = c("Time"))
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115,
col_names = c("Time"))
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115)
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115,
col_names = c("Time", "Food", "Mines", "Oil", "Clths", "Durbl", "Chems", "Cnsum", "Cnstr", "Steel", "FabPr", "Machn", "Cars", "Trans", "Utils", "Rtail", "Finan", "other"))
View(X17_Industry_Portfolios)
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 12, n_max = 1115,
col_names = c("Time", "Food", "Mines", "Oil", "Clths", "Durbl", "Chems", "Cnsum", "Cnstr", "Steel", "FabPr", "Machn", "Cars", "Trans", "Utils", "Rtail", "Finan", "other"))
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115,
col_names = c("Time", "Food", "Mines", "Oil", "Clths", "Durbl", "Chems", "Cnsum", "Cnstr", "Steel", "FabPr", "Machn", "Cars", "Trans", "Utils", "Rtail", "Finan", "other"))
# Load RAW data
X17_Industry_Portfolios <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 12, n_max = 1115,
col_names = c("Time", "Food", "Mines", "Oil", "Clths", "Durbl", "Chems", "Cnsum", "Cnstr", "Steel", "FabPr", "Machn", "Cars", "Trans", "Utils", "Rtail", "Finan", "other"))
# Load RAW data
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 12, n_max = 1115,
col_names = c("Time", "Food", "Mines", "Oil", "Clths", "Durbl", "Chems", "Cnsum", "Cnstr", "Steel", "FabPr", "Machn", "Cars", "Trans", "Utils", "Rtail", "Finan", "other"))
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115) %>%
rename(X1 = Time)
View(X17_Industry_Portfolios_RAW)
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115) %>%
rename(X1 = Time)
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115)
X17_Industry_Portfolios_RAW <- X17_Industry_Portfolios_RAW %>%
rename(X1 = Time)
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115) %>%
rename(Time = X1)
X25_Portfolios_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_5x5.csv",
skip = 15)
View(X25_Portfolios_5x5_RAW)
X25_Portfolios_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_5x5.csv",
skip = 15, n_max = 1115)
View(X25_Portfolios_5x5_RAW)
X25_Portfolios_ME_AC_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_AC_5x5.csv",
skipe = 18)
X25_Portfolios_ME_AC_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_AC_5x5.csv",
skip = 18)
X25_Portfolios_ME_AC_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_AC_5x5.csv",
skip = 18, n_max = 672)
X25_Portfolios_ME_AC_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_AC_5x5.csv",
skip = 18, n_max = 671)
View(X25_Portfolios_ME_AC_5x5_RAW)
X25_Portfolios_ME_AC_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_AC_5x5.csv",
skip = 18, n_max = 671) %>%
rename(Time = X1)
View(X25_Portfolios_ME_AC_5x5_RAW)
# 17 Industry Portfolios
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 12)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 11)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 13)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 17)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 17, n_max = 671)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 17, n_max = 670)
View(X25_Portfolios_ME_BETA_5x5)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 16, n_max = 670)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 16, n_max = 671)
View(X25_Portfolios_ME_BETA_5x5)
View(X25_Portfolios_ME_AC_5x5_RAW)
# 25 Portfolios formed on Market Size and Momentum (aka priors)
X25_Portfolios_ME_Prior_12_2_RAW <- read_csv("data/test_assets/25_Portfolios_ME_Prior_12_2.csv",
skipe = 12)
# 25 Portfolios formed on Market Size and Momentum (aka priors)
X25_Portfolios_ME_Prior_12_2_RAW <- read_csv("data/test_assets/25_Portfolios_ME_Prior_12_2.csv",
skip = 12)
View(X25_Portfolios_ME_Prior_12_2_RAW)
# 25 Portfolios formed on Market Size and Momentum (aka priors)
X25_Portfolios_ME_Prior_12_2_RAW <- read_csv("data/test_assets/25_Portfolios_ME_Prior_12_2.csv",
skip = 11)
View(X25_Portfolios_ME_Prior_12_2_RAW)
# 25 Portfolios formed on Market Size and Momentum (aka priors)
X25_Portfolios_ME_Prior_12_2_RAW <- read_csv("data/test_assets/25_Portfolios_ME_Prior_12_2.csv",
skip = 11, n_max = 1110)
# 25 Portfolios formed on Market Size and Momentum (aka priors)
X25_Portfolios_ME_Prior_12_2_RAW <- read_csv("data/test_assets/25_Portfolios_ME_Prior_12_2.csv",
skip = 11, n_max = 1109)
# 25 Portfolioos formed on Market Size and Net Issuance
X25_Portfolios_ME_NI_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_NI_5x5.csv",
skip = 18)
View(X25_Portfolios_ME_NI_5x5_RAW)
# 25 Portfolios formed on Operating Profitability and Investment
X25_Portfolios_OP_INV_5x5 <- read_csv("data/test_assets/25_Portfolios_OP_INV_5x5.csv",
skip = 18)
# 25 Portfolios formed on Operating Profitability and Investment
X25_Portfolios_OP_INV_5x5 <- read_csv("data/test_assets/25_Portfolios_OP_INV_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
View(X25_Portfolios_OP_INV_5x5)
View(X25_Portfolios_ME_NI_5x5_RAW)
# 25 Portfolioos formed on Market Size and Net Issuance
X25_Portfolios_ME_NI_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_NI_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Variance
X25_Portfolios_ME_VAR_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_VAR_5x5.csv",
skip = 19)
# 25 Portfolios formed on Market Size and Variance
X25_Portfolios_ME_VAR_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_VAR_5x5.csv",
skip = 19, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# Make Raw data tidy
X17_Industry_Portfolios X17_Industry_Portfolios_RAW %>%
# Make Raw data tidy
X17_Industry_Portfolios <- X17_Industry_Portfolios_RAW %>%
gather("Portfolio", "Return", -Time)
View(X17_Industry_Portfolios)
yearmon(X17_Industry_Portfolios$Time)
?yearmon
View(X17_Industry_Portfolios)
as.yearmon(X17_Industry_Portfolios$Time)
yearmon(as.character(X17_Industry_Portfolios$Time))
yearmon(as.factor(X17_Industry_Portfolios$Time))
as.yearmon(X17_Industry_Portfolios$Time, "%Y%m")
as.yearmon(as.character(X17_Industry_Portfolios$Time), "%Y%m")
# Make Raw data tidy
X17_Industry_Portfolios <- X17_Industry_Portfolios_RAW %>%
gather("Portfolio", "Return", -Time) %>%
mutate(Time = replace(Time, Time = as.yearmon(as.character(X17_Industry_Portfolios$Time), "%Y%m")))
?replace
X17_Industry_Portfolios$Time <- as.yearmon(as.character(X17_Industry_Portfolios$Time), "%Y%m"))
X17_Industry_Portfolios$Time <- as.yearmon(as.character(X17_Industry_Portfolios$Time), "%Y%m")
View(X17_Industry_Portfolios)
# Combine Everything
Real_Panel_Dataset <- rbind(X17_Industry_Portfolios_RAW, X25_Portfolios_5x5_RAW)
# Combine Everything
Real_Panel_Dataset <- cbind(X17_Industry_Portfolios_RAW, X25_Portfolios_5x5_RAW)
View(Real_Panel_Dataset)
# Load RAW data
# 17 Industry Portfolios
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Size and Book to Market Ratio
X25_Portfolios_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_5x5.csv",
skip = 15, n_max = 1115, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Size and Market Accrual
X25_Portfolios_ME_AC_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_AC_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 16, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Momentum (aka priors)
X25_Portfolios_ME_Prior_12_2_RAW <- read_csv("data/test_assets/25_Portfolios_ME_Prior_12_2.csv",
skip = 11, n_max = 1109, na = c("99.99", "999")) %>%
rename(Time = X1)
# 35 Portfolioos formed on Market Size and Net Issuance
# Special Note: on Fama/French Website it's called 25 portfolios, but actually has 35 portfolios
X25_Portfolios_ME_NI_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_NI_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Operating Profitability and Investment
X25_Portfolios_OP_INV_5x5 <- read_csv("data/test_assets/25_Portfolios_OP_INV_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Variance
X25_Portfolios_ME_VAR_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_VAR_5x5.csv",
skip = 19, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# Combine Everything
Real_Panel_Dataset <- cbind(X17_Industry_Portfolios_RAW, X25_Portfolios_5x5_RAW)
View(Real_Panel_Dataset)
# Combine Everything
Real_Panel_Dataset <- cbind(X17_Industry_Portfolios_RAW, X25_Portfolios_5x5_RAW, X25_Portfolios_ME_AC_5x5_RAW)
fama_french_tidy <- function(dataframe) {
dataframe %>%
gather("Portfolio", "Return", -Time)
dataframe$Time <- as.yearmon(as.character(dataframe$Time), "%Y%m")
return(dataframe)
}
X17_Industry_Portfolios <- fama_french_tidy(X17_Industry_Portfolios_RAW)
fama_french_tidy <- function(dataframe) {
dataframe <- dataframe %>%
gather("Portfolio", "Return", -Time)
dataframe$Time <- as.yearmon(as.character(dataframe$Time), "%Y%m")
return(dataframe)
}
X17_Industry_Portfolios <- fama_french_tidy(X17_Industry_Portfolios_RAW)
# Load RAW data
# 17 Industry Portfolios
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Size and Book to Market Ratio
X25_Portfolios_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_5x5.csv",
skip = 15, n_max = 1115, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Size and Market Accrual
X25_Portfolios_ME_AC_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_AC_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 16, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Momentum (aka priors)
X25_Portfolios_ME_Prior_12_2_RAW <- read_csv("data/test_assets/25_Portfolios_ME_Prior_12_2.csv",
skip = 11, n_max = 1109, na = c("99.99", "999")) %>%
rename(Time = X1)
# 35 Portfolioos formed on Market Size and Net Issuance
# Special Note: on Fama/French Website it's called 25 portfolios, but actually has 35 portfolios
X25_Portfolios_ME_NI_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_NI_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Operating Profitability and Investment
X25_Portfolios_OP_INV_5x5 <- read_csv("data/test_assets/25_Portfolios_OP_INV_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Variance
X25_Portfolios_ME_VAR_5x5 <- read_csv("data/test_assets/25_Portfolios_ME_VAR_5x5.csv",
skip = 19, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# Load RAW data
# 17 Industry Portfolios
X17_Industry_Portfolios_RAW <- read_csv("data/test_assets/17_Industry_Portfolios.CSV",
skip = 11, n_max = 1115, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Size and Book to Market Ratio
X25_Portfolios_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_5x5.csv",
skip = 15, n_max = 1115, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Size and Market Accrual
X25_Portfolios_ME_AC_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_AC_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Beta
X25_Portfolios_ME_BETA_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_BETA_5x5.csv",
skip = 16, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Momentum (aka priors)
X25_Portfolios_ME_Prior_12_2_RAW <- read_csv("data/test_assets/25_Portfolios_ME_Prior_12_2.csv",
skip = 11, n_max = 1109, na = c("99.99", "999")) %>%
rename(Time = X1)
# 35 Portfolioos formed on Market Size and Net Issuance
# Special Note: on Fama/French Website it's called 25 portfolios, but actually has 35 portfolios
X25_Portfolios_ME_NI_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_NI_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Operating Profitability and Investment
X25_Portfolios_OP_INV_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_OP_INV_5x5.csv",
skip = 18, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# 25 Portfolios formed on Market Size and Variance
X25_Portfolios_ME_VAR_5x5_RAW <- read_csv("data/test_assets/25_Portfolios_ME_VAR_5x5.csv",
skip = 19, n_max = 671, na = c("99.99", "999")) %>%
rename(Time = X1)
# Datasets have differing number of rows due to data availability
# Therefore easier to clean each dataset individually, then rbind them at the end
# Make Raw data tidy
# All data is in the same format, so it's neater to code this up in terms of a function
fama_french_tidy <- function(dataframe) {
dataframe <- dataframe %>%
gather("Portfolio", "Return", -Time)
dataframe$Time <- as.yearmon(as.character(dataframe$Time), "%Y%m")
return(dataframe)
}
X17_Industry_Portfolios <- fama_french_tidy(X17_Industry_Portfolios_RAW)
X25_Portfolios_5x5 <- fama_french_tidy(X25_Portfolios_5x5_RAW)
X25_Portfolios_ME_AC_5x5 <- fama_french_tidy(X25_Portfolios_ME_AC_5x5_RAW)
X25_Portfolios_ME_BETA_5x5 <- fama_french_tidy(X25_Portfolios_ME_BETA_5x5_RAW)
X25_Portfolios_ME_Prior_12_2 <- fama_french_tidy(X25_Portfolios_ME_Prior_12_2_RAW)
X25_Portfolios_ME_NI_5x5 <- fama_french_tidy(X25_Portfolios_ME_NI_5x5_RAW)
X25_Portfolios_OP_INV_5x5 <- fama_french_tidy(X25_Portfolios_OP_INV_5x5_RAW)
X25_Portfolios_ME_VAR_5x5 <- fama_french_tidy(X25_Portfolios_ME_VAR_5x5_RAW)
Real_Panel_Dataset <- rbind(X17_Industry_Portfolios,
X25_Portfolios_5x5,
X25_Portfolios_ME_AC_5x5,
X25_Portfolios_ME_BETA_5x5,
X25_Portfolios_ME_Prior_12_2,
X25_Portfolios_ME_NI_5x5,
X25_Portfolios_OP_INV_5x5,
X25_Portfolios_ME_VAR_5x5)
object.size(Real_Panel_Dataset)
library(readxl)
# AQR Factors
# Betting Against Beta
Betting_Against_Beta_Equity_Factors_Monthly_RAW <- read_excel("data/factors/Betting Against Beta Equity Factors Monthly.xlsx",
sheet = "BAB Factors", skip = 18)
View(Betting_Against_Beta_Equity_Factors_Monthly_RAW)
# Load RAW factor Sets
# AQR Factors
# Betting Against Beta
Betting_Against_Beta_Equity_Factors_Monthly_RAW <- read_excel("data/factors/Betting Against Beta Equity Factors Monthly.xlsx",
sheet = "BAB Factors", skip = 18)
# HMl Devil
The_Devil_in_HMLs_Details_Factors_Monthly_RAW <- read_excel("data/factors/The Devil in HMLs Details Factors Monthly.xlsx",
sheet = "HML Devil", skip = 18)
# Quality Minus Junk
Quality_Minus_Junk_Factors_Monthly_RAW <- read_excel("data/factors/Quality Minus Junk Factors Monthly.xlsx",
sheet = "QMJ Factors", skip = 18)
View(Betting_Against_Beta_Equity_Factors_Monthly_RAW)
