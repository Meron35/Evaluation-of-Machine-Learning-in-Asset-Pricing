"0","##########################"
"0","##Functions for elements in return equation"
"0","##########################"
"0","###########"
"0","##Function to generate Beta, i,t"
"0","###########"
"0","gen_Beta <- function(){"
"0","  Beta<- C[,1:3,]"
"0","}"
"0","gen_v <- function(v_sd){"
"0"," # This is way too complicated. The same thing can be achieved with a single line of code."
"0","  "
"0","  v<-matrix( rnorm(3*(Time+1),mean=0,sd=1), (Time+1),3)*.05^2 "
"0","  return(v)"
"0","}"
"0","  "
"0","#############################"
"0","##Error Structure"
"0","#############################"
"0","##Specify omega, gamma and w"
"0","omega <- -0.736"
"0","gamma <- 0.90"
"0","w <- sqrt(0.363)"
"0","##"
"0","#############################"
"0","##Function to generate errors"
"0","#############################"
"0","gen_error <- function(omega, gamma, w){"
"0","  "
"0","  ##Generate Sigma first"
"0","  "
"0","  sigma2 <- rep(list(0), Time+1)"
"0","  "
"0","  sigma2[[1]] <- omega + w"
"0","  "
"0","  for (t in 1:Time+1) {"
"0","    sigma2[[t+1]] <- omega + gamma*sigma2[[t]] + rnorm(1, 0, w)"
"0","  }"
"0","  "
"0","  sigma2[[1]] <- NULL"
"0","  "
"0","  ##Generate Errors"
"0","  #Turning off the SV componnts for now. "
"0","  #"
"0","  error <- matrix( rnorm(N*(Time+1),mean=0,sd=1), N, (Time+1))*.05^2 "
"0","  return(error)"
"0","}"
